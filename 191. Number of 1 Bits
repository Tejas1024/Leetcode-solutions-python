"""
LeetCode 191. Number of 1 Bits

📝 Question:
Write a function that takes an unsigned integer and 
returns the number of '1' bits (Hamming weight).

Example 1:
Input: n = 00000000000000000000000000001011
Output: 3

Example 2:
Input: n = 00000000000000000000000010000000
Output: 1

Example 3:
Input: n = 11111111111111111111111111111101
Output: 31


-----------------------------------------------------------
✅ Approach 1: Bit by Bit (Right Shift)
1. Initialize a counter = 0
2. Loop while n > 0:
   - Add (n & 1) to counter → this checks the last bit.
   - Right shift n by 1 (n >>= 1)
3. Return counter.

-----------------------------------------------------------
💻 Solution:
"""

class Solution:
    def hammingWeight(self, n: int) -> int:
        count = 0
        while n:
            count += n & 1  # check last bit
            n >>= 1         # shift right
        return count


"""
-----------------------------------------------------------
⏱️ Time Complexity: O(32) = O(1)  
   - In the worst case, for a 32-bit integer, we check all bits.

💾 Space Complexity: O(1)  
   - Uses only a counter variable.
-----------------------------------------------------------
"""
