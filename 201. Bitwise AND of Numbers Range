"""
LeetCode 201. Bitwise AND of Numbers Range

üìù Question:
Given two integers left and right that represent the range [left, right],  
return the bitwise AND of all numbers in this range, inclusive.

Example 1:
Input: left = 5, right = 7
Output: 4

Example 2:
Input: left = 0, right = 0
Output: 0

Example 3:
Input: left = 1, right = 2147483647
Output: 0


-----------------------------------------------------------
‚úÖ Approach: Common Prefix of Binary Representation
- When we do AND over a range, if any bit flips from 0 to 1 within [left, right],
  that bit becomes 0 in the final answer.
- The AND result is basically the **common prefix** of `left` and `right` in binary.
- We keep right-shifting both numbers until they are equal.
- Count how many shifts were done, then shift back to get result.

‚ö° Example:
left = 5 (101), right = 7 (111)
   shift1 ‚Üí left=10, right=11
   shift2 ‚Üí left=1, right=1  (equal now)
   result = 1 << 2 = 100 = 4

-----------------------------------------------------------
üíª Solution:
"""

class Solution:
    def rangeBitwiseAnd(self, left: int, right: int) -> int:
        shift = 0
        while left < right:
            left >>= 1
            right >>= 1
            shift += 1
        return left << shift


"""
-----------------------------------------------------------
‚è±Ô∏è Time Complexity: O(log(max(left, right)))  
   - Each shift removes one bit.

üíæ Space Complexity: O(1)  
   - Only a counter variable used.
-----------------------------------------------------------
"""
